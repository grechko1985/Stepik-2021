1) АРИФМЕТИЧЕСКИЕ ОПЕРАЦИИ

Бинарные операторы (левый и правый операнд) - int:
1) Целочисленное деление 42//8 = 5 - остаток отбрасывает;
2) Деление для получения остатка 42%8 = 2 - остаток от деления;
3) Возведение в степень 2**3 = 8;
4) Сложение 2+2 = 4;
5) Умножение 2*4 = 8;
6) Вычитание 8-4 = 4; 

Унарные операторы:
1) Оператор взятия с противоположным знаком -42 = -42;
2) Оператор оставления знакового числа: +42 = 42;
3) Синтаксическая конструкция: +-+42 = -42;

Вещественные числа (нецелые числа) - float:
1) Сложение
2) Умножение
3) Вычитание
4) Деление: 5/2=2.5
5) Извлечение корня: 9**0.5=3
6) Запись вещественного числа с использованием e: 5e-1=0.5, 1234e-2=12.34
7) 1234e2=123400.0

2) СТАНДАРТНЫЕ ТИПЫ ДАННЫХ

Числовые типы:
- целым числам соответсвует тип int. Например 5.
- вещественным числам (с плавающей точкой/запятой) соответвует float. Например 5.0
- логическим числам соответвует - bool.

Строковые:
- строки - str;

Все перечисляемые типы являются неизменными. 

---- Преобразование числовых типов ----
1) int(x) - преобразование числа из вещественного в целое. Например int(2.5)=2.
2) float(x) - преобразование целого числа к числу с плавающей запятой. Напрмер float(2)=2.0.

---- Тип объекта (type) (урок 1.7)----
Определяет множество значений, которые может принимать объект заданного типа (bool, true, false).
Определяет операции, которые могут быть применены к объектру: 7%2=1, 7.0%2=1.0
Например:
type (7) -> int
type (7.0) -> float

3) ПЕРЕМЕННЫЕ. Стандартный ввод/вывод (урок 1.8)
Пример:
a = 2 # переменной присваиваем значение 2
b = 3 # переменной присваиваем значение 3
print (a+b) -> 5
a = 6 # переменной присваиваем новое значение 6
print (a+b) -> 9
b = b+2
print (b) -> 5
print (c) -> ошибка: любая переменная должна быть инициализирована перед использованием.

Переменная инициализируется при помощи оператора присваивания:
a = 2 # переменной присваиваем значение 2
где a - имя переменной, = оператор присванивания, 2 - значение.

2 = a # ошибка, имя переменной должно находиться слева от оператора присваивания.

Также можно задать переменную с помощью оператора приращения:
a += 3 # увеличение значения на 3. Выполняет то же самое, что a =a+3

Другие операторы ПРИРАЩЕНИЯ:
+= - приращение;
-= - вычитание;
*= - умножение;
/= - деление; 
//= - деление без остатка;
%= - остаток от деления;
**= - возведение в степень.

Ограничения к имени переменной:
- может состоять только из букв (строчных и прописных), цифр и подчёркивания.
- должно начинаться с буквы или подчёркивания_;
- не должно являться ключевым словом (например, нельзя использовать true);
- регистр букв имеет значение (a и A - это две разные переменные).

ДИНАМИЧЕСКАЯ ТИПИЗАЦИЯ (переменная может менять тип по ходу программы):
a = 2
a = 'abacaba'
a = foo()
type(a) - ?

4) ВВОД ДАННЫХ:
inpit () # читает ввод из клавиатуры;
input ('Введите данные:')
s = input() # запись в переменную s пользовательский ввод
a = int(input()) # прочитать строку с клавиатуры и преобразовать в число

5) ВЫВОД ДАННЫХ:
print ('some output')
например:
print (a, s)

6) ЛОГИЧЕСКИЕ ДАННЫЕ (bool):
Логические значения:
False (0)
True (1)

Логические операции:
X | Y
0 | 0
0 | 1
1 | 0
1 | 1
1) ИЛИ (истинно в том случае, если один из опероторов истин): 
x or y;
Результат:
0 - False
1 - True
1 - True
1 - True
2) И (истинно в том случае, если оба опероторов истины):
x and y;
Результат:
0 - False
0 - False
0 - False
1 - True
3) Инверсия:
not x (инверсия от X - противоположные числа)
Результат:
1 - True
1 - True
0 - False	
0 - False

7) ОПЕРАЦИИ СРАВНЕНИЯ:
< строго меньше
<= меньше или равно
> строго больше
=> больше или равно
== равно
!= н равно

Например: 5 < 7 - это True
5 == 2 + 3 - это тоже True 

8) УСЛОВИЯ
if x % 2 == 0:
    print('Четное')
else:
    print('Нечетное')
	
if условие_1:
	- Блок 1
elif условие_2:
	- Блок 2
elif условие_3:
	- Блок 3
else: 
	- Блок N

9) ОПЕРАЦИИ СО СТРОКАМИ:
'string'

"string"

'''multiple lines
string is finished'''

"""multiple lines
string is finished"""

9.1. Сложение строк:
'abc' + 'def' = 'abcdef'
9.2. Умножение строк:
'abc' * 3 = 'abcabcabc'
9.3. Подсчет количества символов в строке:
len('abcdef') = 6
9.4. Сравнение строк в лексикографическом порядке:
'abc' == "abc"  -> True
'abc' < 'ac'
'abc' > 'ab'
9.5. '\n' - символ перевода строки
print('First line', '\n\n\n', 'Last line')
Результат:
First line

Last line
9.6. # это комментарий
x = 5 # комметарий к действию
"""
Многострочный комментарий - это просто 
строка
"""